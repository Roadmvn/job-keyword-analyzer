# Configuration Pre-commit pour Job Keywords Analyzer
# https://pre-commit.com/

repos:
  # ===================================
  # HOOKS GÃ‰NÃ‰RAUX
  # ===================================
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--unsafe]
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-added-large-files
        args: [--maxkb=500]
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: check-docstring-first
      - id: debug-statements
      - id: name-tests-test
        args: [--pytest-test-first]

  # ===================================
  # PYTHON - FORMATAGE
  # ===================================
  - repo: https://github.com/psf/black
    rev: 23.11.0
    hooks:
      - id: black
        language_version: python3.11
        args: [--line-length=88]
        files: ^backend/

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]
        files: ^backend/

  # ===================================
  # PYTHON - LINTING
  # ===================================
  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args: [
          --max-line-length=88,
          --extend-ignore=E203,W503,E501,
          --max-complexity=10
        ]
        files: ^backend/
        additional_dependencies: [
          flake8-docstrings,
          flake8-bugbear,
          flake8-comprehensions,
          flake8-simplify
        ]

  - repo: https://github.com/pycqa/pylint
    rev: v3.0.3
    hooks:
      - id: pylint
        files: ^backend/
        args: [
          --disable=all,
          --enable=unused-import,unused-variable,redefined-outer-name,
          --fail-under=8.0
        ]

  # ===================================
  # PYTHON - TYPE CHECKING
  # ===================================
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.7.1
    hooks:
      - id: mypy
        files: ^backend/
        args: [
          --ignore-missing-imports,
          --follow-imports=silent,
          --warn-redundant-casts,
          --warn-unused-ignores,
          --disallow-any-generics,
          --check-untyped-defs,
          --no-implicit-reexport
        ]
        additional_dependencies: [
          types-requests,
          types-redis,
          types-python-dateutil
        ]

  # ===================================
  # PYTHON - SÃ‰CURITÃ‰
  # ===================================
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        files: ^backend/
        args: [
          -r,
          --format=custom,
          --skip=B101,B601,  # Skip assert_used, shell_injection (for subprocess)
          --confidence-level=medium,
          --severity-level=medium
        ]

  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check
        files: ^backend/requirements.*\.txt$

  # ===================================
  # PYTHON - DOCUMENTATION
  # ===================================
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        files: ^backend/
        args: [
          --convention=google,
          --add-ignore=D100,D101,D102,D103,D104,D105,D106,D107  # Ignore missing docstrings for now
        ]

  # ===================================
  # JAVASCRIPT/TYPESCRIPT - FORMATAGE
  # ===================================
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        files: ^frontend/
        types_or: [javascript, jsx, ts, tsx, json, css, scss, markdown]
        args: [
          --tab-width=2,
          --single-quote=true,
          --trailing-comma=es5,
          --print-width=80
        ]

  # ===================================
  # JAVASCRIPT - LINTING
  # ===================================
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.55.0
    hooks:
      - id: eslint
        files: ^frontend/.*\.[jt]sx?$
        args: [--fix, --ext, .js,.jsx,.ts,.tsx]
        additional_dependencies: [
          'eslint@8.55.0',
          '@typescript-eslint/eslint-plugin@6.14.0',
          '@typescript-eslint/parser@6.14.0',
          'eslint-plugin-react@7.33.2',
          'eslint-plugin-react-hooks@4.6.0',
          'eslint-plugin-jsx-a11y@6.8.0',
          'eslint-plugin-import@2.29.0'
        ]

  # ===================================
  # DOCKER
  # ===================================
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint
        args: [
          --ignore=DL3008,  # Pin versions in apt get install
          --ignore=DL3009,  # Delete the apt-get lists after installing
          --ignore=DL3059   # Multiple consecutive RUN instructions
        ]

  # ===================================
  # YAML/JSON
  # ===================================
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.33.0
    hooks:
      - id: yamllint
        args: [
          -d, "{extends: relaxed, rules: {line-length: {max: 120}}}"
        ]

  # ===================================
  # MARKDOWN
  # ===================================
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint
        args: [
          --disable=MD013,  # Line length
          --disable=MD033,  # Inline HTML
          --disable=MD041   # First line in file should be a top level header
        ]

  # ===================================
  # SECRETS
  # ===================================
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: [
          --baseline, .secrets.baseline,
          --force-use-all-plugins
        ]
        exclude: |
          (?x)^(
            .*\.lock$|
            .*\.min\.js$|
            .*\.map$|
            package-lock\.json$
          )$

  # ===================================
  # COMMITS CONVENTIONNELS
  # ===================================
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.0.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: [
          --types=feat,fix,docs,style,refactor,test,chore,ci,perf,build,revert
        ]

  # ===================================
  # HOOKS PERSONNALISÃ‰S
  # ===================================
  - repo: local
    hooks:
      - id: check-requirements
        name: Check requirements.txt is sorted
        entry: python scripts/check_requirements.py
        language: python
        files: ^backend/requirements.*\.txt$
        pass_filenames: false

      - id: pytest-check
        name: Run pytest
        entry: bash -c 'cd backend && python -m pytest tests/ --tb=short -q'
        language: system
        pass_filenames: false
        files: ^backend/.*\.py$

      - id: npm-test
        name: Run npm tests
        entry: bash -c 'cd frontend && npm test -- --watchAll=false --passWithNoTests'
        language: system
        pass_filenames: false
        files: ^frontend/.*\.(js|jsx|ts|tsx)$

# ===================================
# CONFIGURATION CI
# ===================================
ci:
  autofix_commit_msg: |
    ðŸ¤– [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: 'ðŸ¤– [pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [eslint, pytest-check, npm-test]  # Skip expensive hooks in CI
  submodules: false