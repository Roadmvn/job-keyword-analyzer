# Configuration Nginx pour Job Keywords Analyzer
# Reverse proxy pour frontend React et backend FastAPI

worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Configuration des logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Performance et sécurité
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Limite de taille des uploads
    client_max_body_size 10M;

    # Configuration des timeouts
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;

    # Configuration upstream pour l'API
    upstream api_backend {
        server api:8000;
        keepalive 32;
    }

    # Configuration upstream pour le frontend
    upstream frontend_backend {
        server frontend:3000;
        keepalive 32;
    }

    # Redirection HTTP vers HTTPS (pour la production)
    server {
        listen 80;
        server_name _;
        
        # Permettre Let's Encrypt en production
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirection HTTPS en production
        # location / {
        #     return 301 https://$server_name$request_uri;
        # }

        # Pour le développement, on garde HTTP
        location / {
            return 301 http://$server_name:8080$request_uri;
        }
    }

    # Configuration principale
    server {
        listen 8080 default_server;
        server_name localhost job-analyzer.local;

        # Headers de sécurité
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # Favicon
        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        # Robots.txt
        location = /robots.txt {
            log_not_found off;
            access_log off;
        }

        # API Backend - Routes commençant par /api
        location /api/ {
            # Headers pour le proxy
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;

            # Configuration proxy
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Redirection vers l'API
            proxy_pass http://api_backend;

            # Timeouts spécifiques pour l'API
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Documentation API - Swagger/ReDoc
        location /docs {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_pass http://api_backend;
        }

        location /redoc {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_pass http://api_backend;
        }

        location /openapi.json {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_pass http://api_backend;
        }

        # Health check pour l'API
        location /health {
            proxy_set_header Host $http_host;
            proxy_pass http://api_backend;
            access_log off;
        }

        # Assets statiques du frontend avec cache
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend_backend;
            proxy_set_header Host $http_host;
            
            # Cache pour les assets statiques
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
            
            # Compression pour les assets
            gzip_static on;
        }

        # Toutes les autres routes vers le frontend React
        location / {
            # Headers pour le proxy
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Support pour les WebSockets (utile pour le hot reload Vite)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Redirection vers le frontend
            proxy_pass http://frontend_backend;

            # Pas de cache pour l'index.html
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";

            # Support pour les routes client-side (React Router)
            try_files $uri $uri/ @fallback;
        }

        # Fallback pour les routes React Router
        location @fallback {
            proxy_pass http://frontend_backend;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Gestion des erreurs
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # Configuration HTTPS pour la production (commentée pour le développement)
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com www.your-domain.com;
    #
    #     # Certificats SSL
    #     ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
    #     ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
    #     
    #     # Configuration SSL moderne
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    #     ssl_ecdh_curve secp384r1;
    #     ssl_session_timeout 10m;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_tickets off;
    #     ssl_stapling on;
    #     ssl_stapling_verify on;
    #     
    #     # Headers de sécurité renforcés
    #     add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    #     add_header X-Frame-Options DENY;
    #     add_header X-Content-Type-Options nosniff;
    #     add_header X-XSS-Protection "1; mode=block";
    #     
    #     # Même configuration que HTTP
    #     # ... (copier les locations du serveur HTTP)
    # }
}